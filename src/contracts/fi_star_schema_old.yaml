data_product: FI_Star_Schema
# Business term mapping for LLM and UI
business_terms:
  region:
    column: customerid
    description: "Customer region, mapped by customerid (example only)"
  profit_center:
    column: profitcenterid
    description: "Profit center, mapped by profitcenterid (example only)"
description: >
  SAP FI Star Schema with explicit schema, KPI (restricted key figure) definitions, and table relationships for NLQ/LLM use.

tables:
  - name: FinancialTransactions
    columns:
      - name: transactionid
        type: string
      - name: accountid
        type: string
      - name: accounttypeid
        type: string
      - name: customerid
        type: string
      - name: customertypeid
        type: string
      - name: productid
        type: string
      - name: productcategoryid
        type: string
      - name: profitcenterid
        type: string
      - name: version
        type: string
      - name: date
        type: date
      - name: value
        type: decimal
        description: "Transaction value amount"
        is_filterable: false
        example_values: [1000.0, 250.5]

  - name: GLAccounts
    columns:
      - name: accountid
        type: string
      - name: account_hierarchy_desc
        type: string
        description: "Account hierarchy description (e.g. 'Gross Revenue')"
        is_filterable: true
        example_values: ["Gross Revenue", "Cost of Goods Sold"]
      - name: account_name
        type: string

  - name: Products
    columns:
      - name: productid
        type: string
      - name: product_name
        type: string
        description: "Product name (e.g. Bike M1, eBike E101, Forklift, R100 BIKE, C900 BIKE)"
        example_values:
        - Bike M1
        - eBike E101
        - Forklift
        - R100 BIKE
        - C900 BIKE
      - name: productcategoryid
        type: string

  - name: ProductCategories
    columns:
      - name: productcategoryid
        type: string
      - name: category_name
        type: string

  - name: Customers
    columns:
      - name: customerid
        type: string
      - name: customer_name
        type: string
      - name: customertypeid
        type: string

  - name: CustomerTypes
    columns:
      - name: customertypeid
        type: string
      - name: type_name
        type: string

  - name: ProfitCenters
    columns:
      - name: profitcenterid
        type: string
      - name: profitcenter_name
        type: string

relationships:
  - left_table: FinancialTransactions
    left_column: accountid
    right_table: GLAccounts
    right_column: accountid
    type: many_to_one

  - left_table: FinancialTransactions
    left_column: productid
    right_table: Products
    right_column: productid
    type: many_to_one

  - left_table: Products
    left_column: productcategoryid
    right_table: ProductCategories
    right_column: productcategoryid
    type: many_to_one

  - left_table: FinancialTransactions
    left_column: customerid
    right_table: Customers
    right_column: customerid
    type: many_to_one

  - left_table: Customers
    left_column: customertypeid
    right_table: CustomerTypes
    right_column: customertypeid
    type: many_to_one

  - left_table: FinancialTransactions
    left_column: profitcenterid
    right_table: ProfitCenters
    right_column: profitcenterid
    type: many_to_one

kpis:
  - name: Gross Revenue
    description: "Total gross revenue recognized in the period."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'"
    filter_type: account_hierarchy_desc
    filter_value: Gross Revenue
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]
    business_terms: ["region", "profit_center"]
    dimensions: ["region", "profit_center"]
    filters:
      - column: account_hierarchy_desc
        value: Gross Revenue
    llm_hints: "Aggregate by region and profit center, filter for Gross Revenue accounts."
    diagnostic_questions:
      - "How does Gross Revenue Actual compare to Budget for the current period?"
      - "How does Gross Revenue this period compare to the previous period?"
      - "Which regions or profit centers contributed most to Gross Revenue changes?"
      - "Are there any significant anomalies or trends in Gross Revenue by region or profit center?"

  - name: Cost of Goods Sold
    description: "Total cost of goods sold in the period."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Cost of Goods Sold'"
    filter_type: account_hierarchy_desc
    filter_value: Cost of Goods Sold
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]
    business_terms: ["region", "profit_center"]
    dimensions: ["region", "profit_center"]
    filters:
      - column: account_hierarchy_desc
        value: Cost of Goods Sold
    llm_hints: "Aggregate by region and profit center, filter for Cost of Goods Sold accounts."
    diagnostic_questions:
      - "How does Cost of Goods Sold Actual compare to Budget for the current period?"
      - "How does Cost of Goods Sold this period compare to the previous period?"
      - "Which regions or profit centers have the highest Cost of Goods Sold?"
      - "Are there any negative trends or anomalies in Cost of Goods Sold by region or profit center?"

  - name: Gross Margin
    description: "Gross Margin is calculated as Gross Revenue minus Cost of Goods Sold."
    calculation: |
      SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'
      MINUS
      SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Cost of Goods Sold'
    aggregation: Derived
    base_column: value
    type: derived
    formula: "Gross Revenue - Cost of Goods Sold"
    dependencies:
      - Gross Revenue
      - Cost of Goods Sold
    join_tables: [GLAccounts]
    business_terms: ["region", "profit_center"]
    dimensions: ["region", "profit_center"]
    filters:
      - column: account_hierarchy_desc
        value: Gross Revenue
      - column: account_hierarchy_desc
        value: Cost of Goods Sold
    llm_hints: "Compute Gross Margin by aggregating Gross Revenue and Cost of Goods Sold by region and profit center."
    sql_example: |
      SELECT
        p.productid,
        p.product_name,
        SUM(CASE WHEN ga.account_hierarchy_desc = 'Gross Revenue' THEN ft.value ELSE 0 END) -
        SUM(CASE WHEN ga.account_hierarchy_desc = 'Cost of Goods Sold' THEN ft.value ELSE 0 END) AS gross_margin
      FROM FinancialTransactions ft
      JOIN GLAccounts ga ON ft.accountid = ga.accountid
      JOIN Products p ON ft.productid = p.productid
      WHERE ft.date >= DATE_TRUNC('quarter', CURRENT_DATE - INTERVAL '1 quarter')
        AND ft.date < DATE_TRUNC('quarter', CURRENT_DATE)
      GROUP BY p.productid, p.product_name
    diagnostic_questions:
      - "How does Gross Margin Actual compare to Budget for the current period?"
      - "How does Gross Margin this period compare to the previous period?"
      - "Which regions or profit centers have the lowest Gross Margin?"
      - "Are there any negative trends or anomalies in Gross Margin by region or profit center?"

  - name: Running Total Gross Revenue
    description: "Cumulative sum of Gross Revenue by region and profit center."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'"
    aggregation: SUM
    base_column: value
    type: window
    base_kpi: Gross Revenue
    window: cumulative
    partition_by: [region, profit_center]
    order_by: [date]
    join_tables: [GLAccounts]
    business_terms: ["region", "profit_center"]
    dimensions: ["region", "profit_center"]
    llm_hints: "Compute running total of Gross Revenue by region and profit center, ordered by date."
    sql_example: |
      SELECT
        region,
        profit_center,
        date,
        SUM(value) OVER (PARTITION BY region, profit_center ORDER BY date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS running_total_gross_revenue
      FROM FinancialTransactions
      JOIN GLAccounts ON FinancialTransactions.accountid = GLAccounts.accountid
      WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'

  - name: Top 3 Profit Centers by Gross Revenue
    description: "Top 3 profit centers by Gross Revenue for the period."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'"
    aggregation: SUM
    base_column: value
    type: top_n
    base_kpi: Gross Revenue
    top_n: 3
    partition_by: [region]
    order_by: ["SUM(value) DESC"]
    join_tables: [GLAccounts]
    business_terms: ["region", "profit_center"]
    dimensions: ["region", "profit_center"]
    llm_hints: "Return the top 3 profit centers by Gross Revenue within each region."
    sql_example: |
      SELECT
        region,
        profit_center,
        SUM(value) AS gross_revenue,
        ROW_NUMBER() OVER (PARTITION BY region ORDER BY SUM(value) DESC) AS rn
      FROM FinancialTransactions
      JOIN GLAccounts ON FinancialTransactions.accountid = GLAccounts.accountid
      WHERE GLAccounts.account_hierarchy_desc = 'Gross Revenue'
      GROUP BY region, profit_center
      QUALIFY rn <= 3

  - name: Sales Deductions
    description: "Total sales deductions in the period."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Sales Deductions'"
    filter_type: account_hierarchy_desc
    filter_value: Sales Deductions
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Periodic Building Expense
    description: "Total periodic building expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Periodic Building Expense'"
    filter_type: account_hierarchy_desc
    filter_value: Periodic Building Expense
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Utilities Expense
    description: "Total utilities expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Utilities Expense'"
    filter_type: account_hierarchy_desc
    filter_value: Utilities Expense
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Office Expense
    description: "Total office expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Office Expense'"
    filter_type: account_hierarchy_desc
    filter_value: Office Expense
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Payroll
    description: "Total payroll expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Payroll'"
    filter_type: account_hierarchy_desc
    filter_value: Payroll
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Travel
    description: "Total travel expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Travel'"
    filter_type: account_hierarchy_desc
    filter_value: Travel
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Employee Expense Other
    description: "Total employee expense (other)."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Employee Expense Other'"
    filter_type: account_hierarchy_desc
    filter_value: Employee Expense Other
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]

  - name: Other Operating Expense
    description: "Total other operating expense."
    calculation: "SUM(value) WHERE GLAccounts.account_hierarchy_desc = 'Other Operating Expense'"
    filter_type: account_hierarchy_desc
    filter_value: Other Operating Expense
    aggregation: SUM
    base_column: value
    join_tables: [GLAccounts]
